{"ast":null,"code":"var _jsxFileName = \"/home/zahid/Documents/MERN stack app/Money-management-app/client/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Dashboard from '../components/Dashboard';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nlet serverUrl = process.env.REACT_APP_SERVER_URL;\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.storeCollector = () => {\n      let store = JSON.parse(localStorage.getItem('login-token'));\n\n      if (store && store.login) {\n        this.setState({\n          isLogin: true,\n          store: store\n        });\n      }\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let data = this.state;\n      axios.post(`${serverUrl}/user/login`, data).then(response => {\n        console.log(response.data);\n        localStorage.setItem('login-token', JSON.stringify({\n          login: true,\n          token: response.data.token\n        }));\n        let decode = jwtDecode(response.data.token);\n        console;\n        this.setState({\n          isLogin: true\n        });\n        this.storeCollector();\n      }).catch(error => {\n        this.setState({\n          error: error.response.data\n        });\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      passowrd: \"\",\n      isLogin: false,\n      error: {},\n      store: null\n    };\n  }\n\n  componentDidMount() {\n    this.storeCollector();\n  }\n\n  render() {\n    let {\n      email,\n      password,\n      error,\n      store,\n      isLogin\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, !this.state.isLogin ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }\n    }, \"Registration\"), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 45\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"input\", {\n      className: error.email ? \"form-control is-invalid\" : \"form-control\",\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }\n    }, error.email ? error.email : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 45\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(\"input\", {\n      className: error.password ? \"form-control is-invalid\" : \"form-control\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 38\n      }\n    }, error.password ? error.password : \"\")), /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-link\",\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 34\n      }\n    }, \"Haven't any account\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-info my-4 d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }\n    }, \"Log in\"))) : /*#__PURE__*/React.createElement(Dashboard, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/zahid/Documents/MERN stack app/Money-management-app/client/src/pages/Login.js"],"names":["React","Component","Link","Dashboard","jwtDecode","axios","serverUrl","process","env","REACT_APP_SERVER_URL","Login","constructor","storeCollector","store","JSON","parse","localStorage","getItem","login","setState","isLogin","changeHandler","event","target","name","value","submitHandler","preventDefault","data","state","post","then","response","console","log","setItem","stringify","token","decode","catch","error","email","passowrd","componentDidMount","render","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Dashboard from '../components/Dashboard'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nlet serverUrl = process.env.REACT_APP_SERVER_URL\n\nclass Login extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            email: \"\",\n            passowrd: \"\",\n            isLogin:false,\n            error:{},\n            store:null\n        }\n    }\n\n    componentDidMount() {\n        this.storeCollector()\n    }\n\n    storeCollector = () => {\n        let store = JSON.parse(localStorage.getItem('login-token'))\n        if(store && store.login){\n            this.setState({isLogin:true,store:store})\n        }\n    }\n    \n\n    changeHandler = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n        let data = this.state;\n        axios.post(`${serverUrl}/user/login`,data)\n        .then(response => {\n            console.log(response.data)\n            localStorage.setItem('login-token',JSON.stringify({\n                login:true,\n                token:response.data.token\n            }))\n            let decode = jwtDecode(response.data.token)\n            console\n            this.setState({\n                isLogin:true\n            })\n\n            this.storeCollector()\n        })\n        .catch(error => {\n            this.setState({\n                error: error.response.data\n            })\n\n        })\n    }\n\n    render() {\n\n        let { email, password, error, store , isLogin } = this.state\n\n        return (\n            <div className=\"row\">\n                { !this.state.isLogin ? \n                             <div className=\"col-sm-6 offset-md-3\">\n                             <h1 className=\"text-center display-4\">Registration</h1>\n                             <form method=\"post\" onSubmit={this.submitHandler}>\n                 \n                                 <div className=\"form-group\">\n                                     <label><b>Email</b></label>\n                                     <input\n                                         className={error.email ? \"form-control is-invalid\" : \"form-control\"}\n                                         type=\"email\"\n                                         placeholder=\"Enter your email\"\n                                         name=\"email\"\n                                         id=\"email\"\n                                         value={email}\n                                         onChange={this.changeHandler}\n                 \n                                     ></input>\n                                     <div className=\"invalid-feedback\">\n                                         {error.email ? error.email : \"\"}\n                                     </div>\n                 \n                                 </div>\n                 \n                 \n                                 <div className=\"form-group\">\n                                     <label><b>Password</b></label>\n                                     <input\n                                         className={error.password ? \"form-control is-invalid\" : \"form-control\"}\n                                         type=\"password\"\n                                         placeholder=\"Enter your password\"\n                                         name=\"password\"\n                                         id=\"password\"\n                                         value={password}\n                                         onChange={this.changeHandler}\n                 \n                                     ></input>\n                                     <div className=\"invalid-feedback\">\n                                         {error.password ? error.password : \"\"}\n                                     </div>\n                 \n                                 </div>\n                 \n                                 <Link className=\"btn btn-link\" to='/register'>Haven't any account</Link>\n                                 <button className=\"btn btn-outline-info my-4 d-block\">Log in</button>\n                 \n                             </form>\n                         </div>  \n                : \n                \n                   <Dashboard store={store}></Dashboard>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default Login"]},"metadata":{},"sourceType":"module"}